{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "animated-drawer-demo",
  "type": "registry:example",
  "title": "Animated Drawer Demo",
  "description": "Example showing an animated drawer component.",
  "registryDependencies": [
    "https://pioneerui.com/r/animated-drawer-dialog"
  ],
  "files": [
    {
      "path": "registry/example/animated-drawer-demo.tsx",
      "content": "\"use client\"\n\nimport {\n  AnimatedDrawerDialog,\n  AnimatedDrawerDialogContent,\n  AnimatedDrawerDialogTrigger,\n} from \"@/registry/pioneerui/animated-drawer-dialog\"\nimport { Button } from \"@/components/ui/button\"\nimport { ShoppingCart, Minus, Plus, X, ArrowRight } from \"lucide-react\"\nimport { useState } from \"react\"\nimport { motion } from \"framer-motion\"\nimport { cn } from \"@/lib/utils\"\nimport type { DrawerConfig } from \"@/types/drawer\"\n\ninterface CartItem {\n  id: number\n  name: string\n  price: number\n  quantity: number\n  image: string\n}\n\nexport default function ShoppingCartDemo({ config }: { config: DrawerConfig }) {\n  const [items, setItems] = useState<CartItem[]>([\n    {\n      id: 1,\n      name: \"Wireless Headphones\",\n      price: 199.99,\n      quantity: 1,\n      image: \"/placeholder.svg?height=80&width=80\",\n    },\n    {\n      id: 2,\n      name: \"Smart Watch\",\n      price: 299.99,\n      quantity: 1,\n      image: \"/placeholder.svg?height=80&width=80\",\n    },\n    {\n      id: 3,\n      name: \"Bluetooth Speaker\",\n      price: 149.99,\n      quantity: 1,\n      image: \"/placeholder.svg?height=80&width=80\",\n    },\n  ])\n\n  const updateQuantity = (id: number, change: number) => {\n    setItems((prevItems) =>\n      prevItems\n        .map((item) => (item.id === id ? { ...item, quantity: Math.max(0, item.quantity + change) } : item))\n        .filter((item) => item.quantity > 0),\n    )\n  }\n\n  const total = items.reduce((sum, item) => sum + item.price * item.quantity, 0)\n\n  return (\n    <div className=\"flex justify-center items-center min-h-[200px]\">\n      <AnimatedDrawerDialog>\n        <AnimatedDrawerDialogTrigger asChild>\n          <Button className=\"relative\">\n            <ShoppingCart className=\"mr-2 h-5 w-5\" />\n            Cart\n            {items.length > 0 && (\n              <span className=\"absolute -top-2 -right-2 h-5 w-5 rounded-full bg-red-500 text-xs flex items-center justify-center text-white\">\n                {items.length}\n              </span>\n            )}\n          </Button>\n        </AnimatedDrawerDialogTrigger>\n        <AnimatedDrawerDialogContent {...config}>\n          <div className={cn(\"flex flex-col h-full\", config.stickyFooter && \"flex flex-col\")}>\n            <div className=\"flex items-center justify-between p-4 border-b\">\n              <div>\n                <h2 className=\"text-lg font-semibold\">Shopping Cart</h2>\n                <p className=\"text-sm text-muted-foreground\">{items.length} items</p>\n              </div>\n            </div>\n\n            <div className={cn(\"flex-1 overflow-auto p-4\", config.stickyFooter && \"flex-1 overflow-auto\")}>\n              {items.map((item) => (\n                <motion.div\n                  key={item.id}\n                  layout\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  exit={{ opacity: 0, y: -20 }}\n                  className=\"flex items-center gap-4 mb-4 p-3 rounded-lg bg-muted/50\"\n                >\n                  <img\n                    src={item.image || \"/placeholder.svg\"}\n                    alt={item.name}\n                    className=\"w-20 h-20 rounded-md object-cover\"\n                  />\n                  <div className=\"flex-1\">\n                    <h3 className=\"font-medium\">{item.name}</h3>\n                    <p className=\"text-sm text-muted-foreground\">${item.price}</p>\n                    <div className=\"flex items-center gap-2 mt-2\">\n                      <Button\n                        variant=\"outline\"\n                        size=\"icon\"\n                        className=\"h-8 w-8\"\n                        onClick={() => updateQuantity(item.id, -1)}\n                      >\n                        <Minus className=\"h-4 w-4\" />\n                      </Button>\n                      <span className=\"w-8 text-center\">{item.quantity}</span>\n                      <Button\n                        variant=\"outline\"\n                        size=\"icon\"\n                        className=\"h-8 w-8\"\n                        onClick={() => updateQuantity(item.id, 1)}\n                      >\n                        <Plus className=\"h-4 w-4\" />\n                      </Button>\n                    </div>\n                  </div>\n                  <Button variant=\"ghost\" size=\"icon\" onClick={() => updateQuantity(item.id, -item.quantity)}>\n                    <X className=\"h-4 w-4\" />\n                  </Button>\n                </motion.div>\n              ))}\n              {items.length === 0 && (\n                <motion.div\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  className=\"text-center text-muted-foreground py-8\"\n                >\n                  Your cart is empty\n                </motion.div>\n              )}\n            </div>\n\n            <div className={cn(\"border-t p-4\", config.stickyFooter && \"mt-auto\")}>\n              <div className=\"flex justify-between mb-4\">\n                <span className=\"font-medium\">Total</span>\n                <span className=\"font-bold\">${total.toFixed(2)}</span>\n              </div>\n              <Button className=\"w-full\">\n                Checkout\n                <ArrowRight className=\"ml-2 h-4 w-4\" />\n              </Button>\n            </div>\n          </div>\n        </AnimatedDrawerDialogContent>\n      </AnimatedDrawerDialog>\n    </div>\n  )\n}\n\n",
      "type": "registry:example",
      "target": "components/animated-drawer-demo.tsx"
    }
  ]
}