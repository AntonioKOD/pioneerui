{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "animated-drawer-demo-2",
  "type": "registry:example",
  "title": "Animated Drawer Demo 2",
  "description": "Second example showing an animated drawer component.",
  "registryDependencies": [
    "https://pioneerui.com/r/animated-drawer-dialog"
  ],
  "files": [
    {
      "path": "registry/example/animated-drawer-demo-2.tsx",
      "content": "\"use client\"\n\nimport type React from \"react\"\n\nimport {\n  AnimatedDrawerDialog,\n  AnimatedDrawerDialogContent,\n  AnimatedDrawerDialogTrigger,\n} from \"@/registry/pioneerui/animated-drawer-dialog\"\nimport { Button } from \"@/components/ui/button\"\nimport { Switch } from \"@/components/ui/switch\"\nimport { Settings, Moon, Sun, Bell, Volume2, Wifi, Bluetooth } from \"lucide-react\"\nimport { useState } from \"react\"\nimport { motion } from \"framer-motion\"\n\ninterface Setting {\n  id: string\n  name: string\n  description: string\n  icon: React.ElementType\n  enabled: boolean\n}\n\nexport default function SettingsPanelDemo() {\n  const [settings, setSettings] = useState<Setting[]>([\n    {\n      id: \"dark-mode\",\n      name: \"Dark Mode\",\n      description: \"Toggle dark mode on or off\",\n      icon: Moon,\n      enabled: true,\n    },\n    {\n      id: \"notifications\",\n      name: \"Notifications\",\n      description: \"Enable push notifications\",\n      icon: Bell,\n      enabled: true,\n    },\n    {\n      id: \"sound\",\n      name: \"Sound\",\n      description: \"Enable sound effects\",\n      icon: Volume2,\n      enabled: false,\n    },\n    {\n      id: \"wifi\",\n      name: \"Wi-Fi\",\n      description: \"Connect to wireless networks\",\n      icon: Wifi,\n      enabled: true,\n    },\n    {\n      id: \"bluetooth\",\n      name: \"Bluetooth\",\n      description: \"Connect to nearby devices\",\n      icon: Bluetooth,\n      enabled: false,\n    },\n  ])\n\n  const toggleSetting = (id: string) => {\n    setSettings((prev) =>\n      prev.map((setting) => (setting.id === id ? { ...setting, enabled: !setting.enabled } : setting)),\n    )\n  }\n\n  return (\n    <div className=\"flex justify-center p-4\">\n      <AnimatedDrawerDialog>\n        <AnimatedDrawerDialogTrigger asChild>\n          <Button>\n            <Settings className=\"mr-2 h-5 w-5\" />\n            Settings\n          </Button>\n        </AnimatedDrawerDialogTrigger>\n        <AnimatedDrawerDialogContent className=\"w-full max-w-sm\" side=\"left\">\n          <div className=\"flex flex-col h-full\">\n            <div className=\"flex items-center justify-between p-4 border-b\">\n              <h2 className=\"text-lg font-semibold\">Settings</h2>\n              <div className=\"flex items-center gap-2\">\n                <Sun className=\"h-4 w-4\" />\n                <Switch checked={settings[0].enabled} onClick={() => toggleSetting(\"dark-mode\")} />\n                <Moon className=\"h-4 w-4\" />\n              </div>\n            </div>\n\n            <div className=\"flex-1 overflow-auto p-4\">\n              <div className=\"space-y-4\">\n                {settings.slice(1).map((setting) => (\n                  <motion.div\n                    key={setting.id}\n                    layout\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    className=\"flex items-center justify-between p-3 rounded-lg bg-muted/50\"\n                  >\n                    <div className=\"flex items-center gap-3\">\n                      <div\n                        className={`p-2 rounded-full ${\n                          setting.enabled ? \"bg-primary/20 text-primary\" : \"bg-muted-foreground/20\"\n                        }`}\n                      >\n                        <setting.icon className=\"h-5 w-5\" />\n                      </div>\n                      <div>\n                        <h3 className=\"font-medium\">{setting.name}</h3>\n                        <p className=\"text-sm text-muted-foreground\">{setting.description}</p>\n                      </div>\n                    </div>\n                    <Switch checked={setting.enabled} onClick={() => toggleSetting(setting.id)} />\n                  </motion.div>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"border-t p-4\">\n              <Button className=\"w-full\" variant=\"outline\">\n                Save Changes\n              </Button>\n            </div>\n          </div>\n        </AnimatedDrawerDialogContent>\n      </AnimatedDrawerDialog>\n    </div>\n  )\n}\n\n",
      "type": "registry:example",
      "target": "components/animated-drawer-demo-2.tsx"
    }
  ]
}