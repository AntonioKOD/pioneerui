{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "animated-drawer-dialog",
  "type": "registry:ui",
  "title": "Animated Drawer Dialog",
  "description": "An animated drawer dialog component",
  "files": [
    {
      "path": "registry/pioneerui/animated-drawer-dialog.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { motion, AnimatePresence, type HTMLMotionProps } from \"framer-motion\"\nimport { X } from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\n\nconst AnimatedDrawerDialog = DialogPrimitive.Root\n\nconst AnimatedDrawerDialogTrigger = DialogPrimitive.Trigger\n\nconst AnimatedDrawerDialogClose = DialogPrimitive.Close\n\nconst AnimatedDrawerDialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content> & {\n    side?: \"left\" | \"right\"\n    showCloseButton?: boolean\n    headerGradient?: boolean\n    stickyFooter?: boolean\n    animationDuration?: number\n  }\n>(\n  (\n    {\n      className,\n      children,\n      side = \"right\",\n      showCloseButton = true,\n      headerGradient = false,\n      stickyFooter = false,\n      animationDuration = 0.3,\n      ...props\n    },\n    ref,\n  ) => (\n    <DialogPrimitive.Portal>\n      <DialogPrimitive.Overlay>\n        <AnimatePresence mode=\"wait\">\n          <motion.div\n            key=\"overlay\"\n            className=\"fixed inset-0 z-50 bg-black/60 backdrop-blur-sm\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            transition={{ duration: animationDuration }}\n          />\n        </AnimatePresence>\n      </DialogPrimitive.Overlay>\n      <DialogPrimitive.Content\n        ref={ref}\n        {...props}\n        className={cn(\n          \"fixed z-50 flex h-full w-full max-w-md flex-col bg-background shadow-lg outline-none\",\n          side === \"right\" ? \"right-0\" : \"left-0\",\n          className,\n        )}\n      >\n        <AnimatePresence mode=\"wait\">\n          <motion.div\n            key=\"content\"\n            initial={{ x: side === \"right\" ? \"100%\" : \"-100%\", opacity: 0 }}\n            animate={{ x: 0, opacity: 1 }}\n            exit={{ x: side === \"right\" ? \"100%\" : \"-100%\", opacity: 0 }}\n            transition={{ type: \"spring\", damping: 30, stiffness: 300, duration: animationDuration }}\n            className=\"relative flex h-full flex-col\"\n          >\n            {showCloseButton && (\n              <AnimatedDrawerDialogClose className=\"absolute right-4 top-4 z-50\">\n                <motion.button\n                  className=\"rounded-full p-2 text-muted-foreground transition-colors hover:bg-accent hover:text-accent-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\n                  whileHover={{ scale: 1.1 }}\n                  whileTap={{ scale: 0.9 }}\n                >\n                  <X className=\"h-4 w-4\" />\n                  <span className=\"sr-only\">Close</span>\n                </motion.button>\n              </AnimatedDrawerDialogClose>\n            )}\n            {headerGradient && (\n              <div className=\"pointer-events-none absolute inset-x-0 top-0 z-40 h-20 bg-gradient-to-b from-background to-transparent\" />\n            )}\n            <div className={cn(\"flex-1 overflow-auto\", stickyFooter && \"flex flex-col\")}>{children}</div>\n          </motion.div>\n        </AnimatePresence>\n      </DialogPrimitive.Content>\n    </DialogPrimitive.Portal>\n  ),\n)\nAnimatedDrawerDialogContent.displayName = \"AnimatedDrawerDialogContent\"\n\ntype MotionDivProps = Omit<HTMLMotionProps<\"div\">, \"ref\"> & {\n  ref?: React.Ref<HTMLDivElement>\n}\n\nconst AnimatedDrawerDialogHeader = React.forwardRef<HTMLDivElement, MotionDivProps>(({ className, ...props }, ref) => (\n  <motion.div\n    ref={ref}\n    initial={{ opacity: 0, y: -20 }}\n    animate={{ opacity: 1, y: 0 }}\n    transition={{ delay: 0.2 }}\n    className={cn(\"grid gap-1.5 p-6\", className)}\n    {...props}\n  />\n))\nAnimatedDrawerDialogHeader.displayName = \"AnimatedDrawerDialogHeader\"\n\nconst AnimatedDrawerDialogFooter = React.forwardRef<HTMLDivElement, MotionDivProps>(({ className, ...props }, ref) => (\n  <motion.div\n    ref={ref}\n    initial={{ opacity: 0, y: 20 }}\n    animate={{ opacity: 1, y: 0 }}\n    transition={{ delay: 0.2 }}\n    className={cn(\"flex flex-col gap-2 p-6\", className)}\n    {...props}\n  />\n))\nAnimatedDrawerDialogFooter.displayName = \"AnimatedDrawerDialogFooter\"\n\nconst AnimatedDrawerDialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAnimatedDrawerDialogTitle.displayName = \"AnimatedDrawerDialogTitle\"\n\nconst AnimatedDrawerDialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description ref={ref} className={cn(\"text-sm text-muted-foreground\", className)} {...props} />\n))\nAnimatedDrawerDialogDescription.displayName = \"AnimatedDrawerDialogDescription\"\n\nexport {\n  AnimatedDrawerDialog,\n  AnimatedDrawerDialogTrigger,\n  AnimatedDrawerDialogContent,\n  AnimatedDrawerDialogHeader,\n  AnimatedDrawerDialogFooter,\n  AnimatedDrawerDialogTitle,\n  AnimatedDrawerDialogDescription,\n  AnimatedDrawerDialogClose,\n}\n\n",
      "type": "registry:ui",
      "target": "components/pioneerui/animated-drawer-dialog.tsx"
    }
  ]
}